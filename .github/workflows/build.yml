name: Build and Package

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # 安装 Linux 所需的依赖
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y fakeroot binutils

      - name: Set image extension
        id: set-ext
        run: |
          if [ "$RUNNER_OS" = "Windows" ]; then
            echo "image-extension=ico" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" = "Linux" ]; then
            echo "image-extension=png" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" = "macOS" ]; then
            echo "image-extension=icns" >> $GITHUB_ENV
          fi

      - name: Build with Maven
        run: |
          mvn clean package
          mvn javafx:jlink

      - name: Package application
        run: |
          # 设置平台特定参数
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            mvn jpackage:jpackage -Dimage-extension=${{ env.image-extension }} \
              -Djpackage.arguments="--win-menu,--win-dir-chooser"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            mvn jpackage:jpackage -Dimage-extension=${{ env.image-extension }} \
              -Djpackage.arguments="--mac-package-identifier,com.example.projectmanagement,--mac-package-name,ProjectManagement,--mac-category,Business"
          else
            mvn jpackage:jpackage -Dimage-extension=${{ env.image-extension }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4  # 更新为 v4
        with:
          name: ProjectManagement-${{ runner.os }}
          path: target/installer/*