name: Build and Package

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev fakeroot dpkg-dev binutils

      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: brew install create-dmg

      # 设置图标扩展名
      - name: Set image extension
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "image-extension=ico" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            echo "image-extension=icns" >> $GITHUB_ENV
          else
            echo "image-extension=png" >> $GITHUB_ENV
          fi

      - name: Build project
        run: |
          mvn clean package
          mvn javafx:jlink

      - name: Package application
        run: |
          # 设置特定于操作系统的参数
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            mvn jpackage:jpackage -Dimage-extension=${{ env.image-extension }} \
                -Dinstaller.dir="${{ github.workspace }}/target/installer" \
                -Dinstaller.name="ProjectManagement-${{ runner.os }}"
          else
            mvn jpackage:jpackage -Dimage-extension=${{ env.image-extension }} \
                -Dinstaller.dir="${{ github.workspace }}/target/installer"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ProjectManagement-${{ runner.os }}
          path: target/installer/